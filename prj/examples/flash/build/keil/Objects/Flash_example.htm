<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Flash_example.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Flash_example.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Oct 11 14:15:25 2023
<BR><P>
<H3>Maximum Stack Usage =        124 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Flash_Write &rArr; Flash_WaitforOperationDone &rArr; SysTick_DelayUS
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">INT02_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">INT02_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1]">INT02_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[2]">INT03_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[3]">INT04_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[4]">INT05_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[5]">INT06_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[6]">INT07_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[7]">INT08_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[8]">INT09_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[9]">INT10_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[a]">INT11_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[b]">INT12_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[c]">INT13_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[d]">INT14_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[e]">INT15_Handler</a> from systick.o(i.Systick_InterruptHandler) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[f]">INT16_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[10]">INT17_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[11]">INT18_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[12]">INT19_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[13]">INT20_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[14]">INT21_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[15]">INT22_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[16]">INT23_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[17]">INT24_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[18]">INT25_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[19]">INT26_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[1a]">INT27_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[1b]">INT28_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[1c]">INT29_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[1d]">INT30_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[1e]">INT31_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[1f]">INT32_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[20]">INT33_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[21]">INT34_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[22]">INT35_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[23]">INT36_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[24]">INT37_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[25]">INT38_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[26]">INT39_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[27]">INT40_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[28]">INT41_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[29]">INT42_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[2a]">INT43_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[2b]">INT44_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[2c]">INT45_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[2d]">INT46_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[2e]">INT47_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_emf660x.o(.text) referenced from startup_emf660x.o(RESET)
 <LI><a href="#[30]">SystemInit</a> from sysinit.o(i.SystemInit) referenced from startup_emf660x.o(.text)
 <LI><a href="#[31]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_emf660x.o(.text)
 <LI><a href="#[2f]">main</a> from flash_example.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[32]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[34]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[46]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[47]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[48]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[49]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[4a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>INT02_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT02_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT02_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>INT03_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>INT04_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>INT05_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>INT06_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>INT07_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>INT08_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>INT09_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>INT10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>INT11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>INT12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>INT13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>INT14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>INT16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>INT17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>INT18_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>INT19_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>INT20_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>INT21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>INT22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>INT23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>INT24_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>INT25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>INT26_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>INT27_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>INT28_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>INT29_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>INT30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>INT31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>INT32_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>INT33_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>INT34_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>INT35_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>INT36_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>INT37_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>INT38_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>INT39_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>INT40_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>INT41_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>INT42_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>INT43_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>INT44_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>INT45_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>INT46_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>INT47_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_emf660x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program2Address
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[4d]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[4f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>CLOCK_SetConfig</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, clock.o(i.CLOCK_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_IsNowStable
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[37]"></a>Flash_Erase</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, flash.o(i.Flash_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Flash_Erase &rArr; Flash_WaitforOperationDone &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WaitforOperationDone
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>Flash_GetParam</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash.o(i.Flash_GetParam))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program2Address
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_PageIsLocked
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>Flash_PageIsLocked</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, flash.o(i.Flash_PageIsLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Flash_PageIsLocked
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>Flash_Program2Address</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, flash.o(i.Flash_Program2Address))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Flash_Program2Address
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[3d]"></a>Flash_Read</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, flash.o(i.Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>Systick_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, systick.o(i.Systick_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_InterruptHandler
</UL>

<P><STRONG><a name="[50]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3f]"></a>Flash_Write</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, flash.o(i.Flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Flash_Write &rArr; Flash_WaitforOperationDone &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program2Address
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WaitforOperationDone
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>OSC_SetConfig</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, clock.o(i.OSC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OSC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3e]"></a>SysTick_DelayUS</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, systick.o(i.SysTick_DelayUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysTick_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WaitforOperationDone
</UL>

<P><STRONG><a name="[44]"></a>SysTick_Init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, systick.o(i.SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, sysinit.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemInit &rArr; CLOCK_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSC_SetConfig
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>INT15_Handler</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, systick.o(i.Systick_InterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = INT15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_emf660x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>Systick_InterruptHandler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, systick.o(i.Systick_InterruptHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_Callback
</UL>

<P><STRONG><a name="[51]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[52]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, flash_example.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = main &rArr; Flash_Write &rArr; Flash_WaitforOperationDone &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_PageIsLocked
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GetParam
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[36]"></a>Clock_IsNowStable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clock.o(i.Clock_IsNowStable))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetConfig
</UL>

<P><STRONG><a name="[3a]"></a>Flash_WaitforOperationDone</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, flash.o(i.Flash_WaitforOperationDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Flash_WaitforOperationDone &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
