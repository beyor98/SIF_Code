<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\gpio_example.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\gpio_example.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Oct 07 17:04:12 2023
<BR><P>
<H3>Maximum Stack Usage =        140 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; etm2_timerinit &rArr; ETM_InitTimeBase &rArr; ETM_StopTimeBase &rArr; ETM_WaitTbStop &rArr; SysTick_DelayUS
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">INT02_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">INT02_Handler</a><BR>
 <LI><a href="#[6a]">UART_PutChar</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a]">UART_PutChar</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[34]">ETM1Callback</a> from sif_module.o(i.ETM1Callback) referenced from etm_module.o(i.etm1_timerinit)
 <LI><a href="#[35]">ETM2Callback</a> from sif_module.o(i.ETM2Callback) referenced from etm_module.o(i.etm2_timerinit)
 <LI><a href="#[1]">INT02_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[2]">INT03_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[3]">INT04_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[4]">INT05_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[5]">INT06_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[6]">INT07_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[7]">INT08_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[8]">INT09_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[9]">INT10_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[a]">INT11_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[b]">INT12_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[c]">INT13_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[d]">INT14_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[e]">INT15_Handler</a> from systick.o(i.Systick_InterruptHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[f]">INT16_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[10]">INT17_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[11]">INT18_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[12]">INT19_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[13]">INT20_Handler</a> from dma.o(i.INT20_Handler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[14]">INT21_Handler</a> from gpio_module.o(i.INT21_Handler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[15]">INT22_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[16]">INT23_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[17]">INT24_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[18]">INT25_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[19]">INT26_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[1a]">INT27_Handler</a> from etm.o(i.ETM0_IRQHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[1b]">INT28_Handler</a> from etm.o(i.ETM1_IRQHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[1c]">INT29_Handler</a> from etm.o(i.ETM2_IRQHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[1d]">INT30_Handler</a> from etm.o(i.ETM3_IRQHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[1e]">INT31_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[1f]">INT32_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[20]">INT33_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[21]">INT34_Handler</a> from uart.o(i.UART0_InterruptHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[22]">INT35_Handler</a> from uart.o(i.UART1_InterruptHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[23]">INT36_Handler</a> from uart.o(i.UART2_InterruptHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[24]">INT37_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[25]">INT38_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[26]">INT39_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[27]">INT40_Handler</a> from etm.o(i.ETM4_IRQHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[28]">INT41_Handler</a> from etm.o(i.ETM5_IRQHandler) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[29]">INT42_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[2a]">INT43_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[2b]">INT44_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[2c]">INT45_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[2d]">INT46_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[2e]">INT47_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_f6601c.o(.text) referenced from startup_f6601c.o(RESET)
 <LI><a href="#[30]">SystemInit</a> from sysinit.o(i.SystemInit) referenced from startup_f6601c.o(.text)
 <LI><a href="#[32]">UART_InterruptHandler</a> from uart.o(i.UART_InterruptHandler) referenced from uart.o(i.UART_Init)
 <LI><a href="#[31]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_f6601c.o(.text)
 <LI><a href="#[33]">fputc</a> from printf_1.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[2f]">main</a> from gpio_example.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(.text)
</UL>
<P><STRONG><a name="[7c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[36]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[7e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[7f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[80]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[81]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>INT02_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT02_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT02_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>INT03_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>INT04_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>INT05_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>INT06_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>INT07_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>INT08_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>INT09_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>INT10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>INT11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>INT12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>INT13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>INT14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>INT16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>INT17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>INT18_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>INT19_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>INT22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>INT23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>INT24_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>INT25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>INT26_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>INT31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>INT32_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>INT33_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>INT37_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>INT38_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>INT39_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>INT42_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>INT43_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>INT44_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>INT45_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>INT46_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>INT47_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_f6601c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteArrayData
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_Init
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm2_timerinit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm1_timerinit
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[64]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteArrayData
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[37]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[88]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[89]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[8a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>CLOCK_SetConfig</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, clock.o(i.CLOCK_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_IsNowStable
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[41]"></a>ETM0_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, etm.o(i.ETM0_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_CommonIRQHandler
</UL>

<P><STRONG><a name="[1a]"></a>INT27_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, etm.o(i.ETM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INT27_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>ETM1Callback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sif_module.o(i.ETM1Callback))
<BR>[Address Reference Count : 1]<UL><LI> etm_module.o(i.etm1_timerinit)
</UL>
<P><STRONG><a name="[6c]"></a>DMA_Start</STRONG> (Thumb, 202 bytes, Stack size 20 bytes, dma.o(i.DMA_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxProcessData
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxProcessData
</UL>

<P><STRONG><a name="[43]"></a>DebugConsoleInit</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, printf_1.o(i.DebugConsoleInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DebugConsoleInit &rArr; UartPinMuxConfig &rArr; GPIO_Init &rArr; GPIO_SetPullUp
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPinMuxConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>ETM1_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, etm.o(i.ETM1_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_CommonIRQHandler
</UL>

<P><STRONG><a name="[1b]"></a>INT28_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, etm.o(i.ETM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INT28_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ETM2Callback</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sif_module.o(i.ETM2Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ETM2Callback &rArr; ETM_StopTimeBase &rArr; ETM_WaitTbStop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_StopTimeBase
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_StartTimeBase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> etm_module.o(i.etm2_timerinit)
</UL>
<P><STRONG><a name="[49]"></a>ETM2_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, etm.o(i.ETM2_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_CommonIRQHandler
</UL>

<P><STRONG><a name="[1c]"></a>INT29_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, etm.o(i.ETM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INT29_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ETM3_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, etm.o(i.ETM3_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_CommonIRQHandler
</UL>

<P><STRONG><a name="[1d]"></a>INT30_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, etm.o(i.ETM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INT30_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>ETM4_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, etm.o(i.ETM4_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_CommonIRQHandler
</UL>

<P><STRONG><a name="[27]"></a>INT40_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, etm.o(i.ETM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INT40_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ETM5_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, etm.o(i.ETM5_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_CommonIRQHandler
</UL>

<P><STRONG><a name="[28]"></a>INT41_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, etm.o(i.ETM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INT41_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>ETM_EnableInterrupts</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, etm.o(i.ETM_EnableInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm2_timerinit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm1_timerinit
</UL>

<P><STRONG><a name="[4d]"></a>ETM_InitTimeBase</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, etm.o(i.ETM_InitTimeBase))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ETM_InitTimeBase &rArr; ETM_StopTimeBase &rArr; ETM_WaitTbStop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_StopTimeBase
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm2_timerinit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm1_timerinit
</UL>

<P><STRONG><a name="[48]"></a>ETM_StartTimeBase</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, etm.o(i.ETM_StartTimeBase))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ETM_StartTimeBase &rArr; ETM_WaitTbStop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_WaitTbStop
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM2Callback
</UL>

<P><STRONG><a name="[47]"></a>ETM_StopTimeBase</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, etm.o(i.ETM_StopTimeBase))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ETM_StopTimeBase &rArr; ETM_WaitTbStop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_WaitTbStop
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_InitTimeBase
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM2Callback
</UL>

<P><STRONG><a name="[51]"></a>GPIO_Init</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Init &rArr; GPIO_SetPullUp
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPullUp
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPinMuxConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_aip16400_init
</UL>

<P><STRONG><a name="[76]"></a>GPIO_PinWrite</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gpio.o(i.GPIO_PinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_aip16400_init
</UL>

<P><STRONG><a name="[13]"></a>INT20_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dma.o(i.INT20_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = INT20_Handler &rArr; DMA_CommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>INT21_Handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gpio_module.o(i.INT21_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = INT21_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>OSC_SetConfig</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, clock.o(i.OSC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OSC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[56]"></a>PeriphClk_SetConfig</STRONG> (Thumb, 556 bytes, Stack size 24 bytes, clock.o(i.PeriphClk_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PeriphClk_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_IsNowStable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_GetPllReferenceClock
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm2_timerinit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm1_timerinit
</UL>

<P><STRONG><a name="[58]"></a>SysTick_DelayMS</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, systick.o(i.SysTick_DelayMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_DelayMS &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sif_process
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>SysTick_DelayUS</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, systick.o(i.SysTick_DelayUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysTick_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_WaitTbStop
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayMS
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteData
</UL>

<P><STRONG><a name="[79]"></a>SysTick_Init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, systick.o(i.SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, sysinit.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemInit &rArr; CLOCK_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSC_SetConfig
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>Systick_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, systick.o(i.Systick_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_InterruptHandler
</UL>

<P><STRONG><a name="[e]"></a>INT15_Handler</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, systick.o(i.Systick_InterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = INT15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>Systick_InterruptHandler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, systick.o(i.Systick_InterruptHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_Callback
</UL>

<P><STRONG><a name="[5c]"></a>TM1640_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tm1640.o(i.TM1640_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TM1640_Init &rArr; TM1640_WriteEightSegmentCode &rArr; TM1640_WriteArrayData &rArr; TM1640_WriteData &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aip1640_write
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteEightSegmentCode
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteData
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_aip16400_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sif_process
</UL>

<P><STRONG><a name="[63]"></a>TM1640_WriteArrayData</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, tm1640.o(i.TM1640_WriteArrayData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TM1640_WriteArrayData &rArr; TM1640_WriteData &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteEightSegmentCode
</UL>

<P><STRONG><a name="[60]"></a>TM1640_WriteData</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, tm1640.o(i.TM1640_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TM1640_WriteData &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aip1640_write
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteArrayData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_Init
</UL>

<P><STRONG><a name="[62]"></a>TM1640_WriteEightSegmentCode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tm1640.o(i.TM1640_WriteEightSegmentCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TM1640_WriteEightSegmentCode &rArr; TM1640_WriteArrayData &rArr; TM1640_WriteData &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteArrayData
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_Init
</UL>

<P><STRONG><a name="[21]"></a>INT34_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uart.o(i.UART0_InterruptHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>UART0_InterruptHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UART0_InterruptHandler), UNUSED)

<P><STRONG><a name="[22]"></a>INT35_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uart.o(i.UART1_InterruptHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>UART1_InterruptHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UART1_InterruptHandler), UNUSED)

<P><STRONG><a name="[23]"></a>INT36_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uart.o(i.UART2_InterruptHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_f6601c.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>UART2_InterruptHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UART2_InterruptHandler), UNUSED)

<P><STRONG><a name="[45]"></a>UART_Init</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugConsoleInit
</UL>

<P><STRONG><a name="[6a]"></a>UART_PutChar</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UART_PutChar))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>

<P><STRONG><a name="[68]"></a>UART_RxInterruptHandler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, uart.o(i.UART_RxInterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UART_RxInterruptHandler &rArr; UART_RxProcessData &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxProcessData
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InterruptHandler
</UL>

<P><STRONG><a name="[69]"></a>UART_TxInterruptHandler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, uart.o(i.UART_TxInterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UART_TxInterruptHandler &rArr; UART_TxProcessData &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxProcessData
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InterruptHandler
</UL>

<P><STRONG><a name="[44]"></a>UartPinMuxConfig</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, printf_1.o(i.UartPinMuxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UartPinMuxConfig &rArr; GPIO_Init &rArr; GPIO_SetPullUp
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugConsoleInit
</UL>

<P><STRONG><a name="[6e]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8e]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[55]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sif_process
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT21_Handler
</UL>

<P><STRONG><a name="[8f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[90]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[91]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[5e]"></a>aip1640_write</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tm1640.o(i.aip1640_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = aip1640_write &rArr; TM1640_WriteData &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_Init
</UL>

<P><STRONG><a name="[72]"></a>etm1_timerinit</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, etm_module.o(i.etm1_timerinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = etm1_timerinit &rArr; ETM_InitTimeBase &rArr; ETM_StopTimeBase &rArr; ETM_WaitTbStop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_InitTimeBase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_EnableInterrupts
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphClk_SetConfig
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>etm2_timerinit</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, etm_module.o(i.etm2_timerinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = etm2_timerinit &rArr; ETM_InitTimeBase &rArr; ETM_StopTimeBase &rArr; ETM_WaitTbStop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_InitTimeBase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_EnableInterrupts
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphClk_SetConfig
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, printf_1.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[5d]"></a>gpio_aip16400_init</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gpio_module.o(i.gpio_aip16400_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gpio_aip16400_init &rArr; GPIO_Init &rArr; GPIO_SetPullUp
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_Init
</UL>

<P><STRONG><a name="[77]"></a>gpio_input_init</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gpio_module.o(i.gpio_input_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gpio_input_init &rArr; GPIO_Init &rArr; GPIO_SetPullUp
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>gpio_output_init</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, gpio_module.o(i.gpio_output_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gpio_output_init &rArr; GPIO_Init &rArr; GPIO_SetPullUp
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gpio_example.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = main &rArr; etm2_timerinit &rArr; ETM_InitTimeBase &rArr; ETM_StopTimeBase &rArr; ETM_WaitTbStop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sif_process
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm2_timerinit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etm1_timerinit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayMS
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugConsoleInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7a]"></a>sif_process</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, sif_module.o(i.sif_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = sif_process &rArr; TM1640_Init &rArr; TM1640_WriteEightSegmentCode &rArr; TM1640_WriteArrayData &rArr; TM1640_WriteData &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayMS
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verifyFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>start</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tm1640.o(i.start))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = start &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aip1640_write
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteArrayData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_Init
</UL>

<P><STRONG><a name="[61]"></a>stop</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tm1640.o(i.stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = stop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aip1640_write
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_WriteArrayData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM1640_Init
</UL>

<P><STRONG><a name="[7b]"></a>verifyFrame</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, sif_module.o(i.verifyFrame))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sif_process
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[57]"></a>Clock_GetPllReferenceClock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clock.o(i.Clock_GetPllReferenceClock))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphClk_SetConfig
</UL>

<P><STRONG><a name="[40]"></a>Clock_IsNowStable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clock.o(i.Clock_IsNowStable))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphClk_SetConfig
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetConfig
</UL>

<P><STRONG><a name="[52]"></a>GPIO_GetInstance</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(i.GPIO_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[53]"></a>GPIO_SetPullUp</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gpio.o(i.GPIO_SetPullUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetPullUp
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[42]"></a>ETM_CommonIRQHandler</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, etm.o(i.ETM_CommonIRQHandler), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM5_IRQHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM4_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM3_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM2_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM1_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM0_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>ETM_GetInstance</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, etm.o(i.ETM_GetInstance))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_InitTimeBase
</UL>

<P><STRONG><a name="[4f]"></a>ETM_WaitTbStop</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, etm.o(i.ETM_WaitTbStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ETM_WaitTbStop &rArr; SysTick_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_StopTimeBase
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETM_StartTimeBase
</UL>

<P><STRONG><a name="[54]"></a>DMA_CommonIRQHandler</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, dma.o(i.DMA_CommonIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_CommonIRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT20_Handler
</UL>

<P><STRONG><a name="[67]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[32]"></a>UART_InterruptHandler</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, uart.o(i.UART_InterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UART_InterruptHandler &rArr; UART_TxInterruptHandler &rArr; UART_TxProcessData &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxInterruptHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxInterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.UART_Init)
</UL>
<P><STRONG><a name="[6b]"></a>UART_RxProcessData</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, uart.o(i.UART_RxProcessData))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_RxProcessData &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxInterruptHandler
</UL>

<P><STRONG><a name="[6d]"></a>UART_TxProcessData</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, uart.o(i.UART_TxProcessData))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_TxProcessData &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxInterruptHandler
</UL>

<P><STRONG><a name="[6f]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[71]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[70]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
